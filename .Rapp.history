legend("bottomright",c("MERA","logistic"),pch=1,col=2:1)
multi_integrated(init.Ns=5,thetas=1,Drs=0.5,rs=1,R0=100,nstep=20)
logi_growth(5,r=1,SSN=90.5,nstep=20)
multi_integrated(init.Ns=5,thetas=1,Drs=0.1,rs=1,R0=100,nstep=20)
logi_growth(5,r=1,SSN=60.1,nstep=20)
par(mfrow=c(2,2))
multi_integrated(init.Ns=5,thetas=1,Drs=0,rs=1,R0=100,nstep=20)
logi_growth(5,r=1,SSN=50,nstep=20)
legend("bottomright",c("MERA","logistic"),pch=1,col=2:1)
multi_integrated(init.Ns=5,thetas=1,Drs=1,rs=1,R0=100,nstep=20)
logi_growth(5,r=1,SSN=99,nstep=20)
legend("bottomright",c("MERA","logistic"),pch=1,col=2:1)
multi_integrated(init.Ns=5,thetas=1,Drs=0.5,rs=1,R0=100,nstep=20)
logi_growth(5,r=1,SSN=90.48,nstep=20)
legend("bottomright",c("MERA","logistic"),pch=1,col=2:1)
library(nleqslv)#
#
multi_predator_1prey <- function(inits,thetas,Drs,rs,Gs,R0,nstep){#
	Nseq <- matrix(nrow=nstep,ncol=length(thetas))#
	Nseq[1,] <- inits#
	for(t in 2:nstep){#
		clocks <- cumu_growths <- rep(0,length=length(thetas))#
		cumu_growths[-1] <- cumu_growths[-1] + multi_growth(Nseq[t-1,-1],thetas[-1],Drs[-1],rs[-1],Nseq[t-1,1]*thetas[1])#
		cumu_growths[1] <- multi_growth(Nseq[t-1,1],thetas[1],Drs[1],rs[1],R0)- sum(Nseq[t-1,-1]*thetas[-1])/thetas[1]#lag in predation#
		clocks <- clocks+1#
		for(sp in 1:length(thetas)){#
			if(clocks[sp]<Gs[sp]){#during the current generation, abundance doesn't change#
				Nseq[t,sp] <- Nseq[t-1,sp]#
			}else{#when the current generation ends, update abundance and reset clock and cumulated growth#
				Nseq[t,sp] <- Nseq[t-1,sp]+cumu_growths[sp]#
				clocks[sp] <- 0#
				cumu_growths[sp] <- 0#
			}#
		}		#
	}#
#
	time <- 1: nstep#
	plot(Nseq[,1]~time,col=1,ylim=range(Nseq),ylab="abundance")#
	lines(time,Nseq[,1],col=1)#
	for(i in 2:dim(Nseq)[2]){#
		points(time,Nseq[,i],col=i)#
		lines(time,Nseq[,i],col=i)#
	}#
	#legend("bottomright",c("prey",paste("predator",1:(dim(Nseq)[2]-1))),col=1:length(thetas),pch=1,lty=1)#
	Nseq#
}#
#
multi_integrated <- function(init.Ns0,thetas,Drs,rs,Gs,R0,nstep){#
	Nseq <- matrix(nrow=nstep,ncol=length(thetas))#
	Nseq[1,] <- init.Ns0#
	clocks <- cumu_growths <- rep(0,length=length(thetas))#
	for(i in 2:nstep){#
		cumu_growths <- cumu_growths + multi_growth(Nseq[i-1,],thetas,Drs,rs,R0)#
		clocks <- clocks+1#
		for(sp in 1:length(thetas)){#
			if(clocks[sp]<Gs[sp]){#during the current generation, abundance doesn't change#
				Nseq[i,sp] <- Nseq[i-1,sp]#
			}else{#when the current generation ends, update abundance and reset clock and cumulated growth#
				Nseq[i,sp] <- Nseq[i-1,sp]+cumu_growths[sp]#
				clocks[sp] <- 0#
				cumu_growths[sp] <- 0#
			}#
		}#
	}#
	time <- 1:nstep#
	for(sp in 1:length(Drs)){#
		if(sp==1){#
			plot(Nseq[,sp]~time,col=sp+1,ylim=range(Nseq),ylab="abundance",xlab=paste("time (Dr=",Drs[1],")"))#
		}else{#
			points(time,Nseq[,sp],col=sp+1)#
		}#
		lines(time,Nseq[,sp],col=sp+1)#
	}#
	Nseq#
}#
#
multi_growth <- function(Ns,thetas,Drs,rs,R0){#
	Cs <- (rs+1)*Ns*thetas#
	NDs <- Ns^Drs#
	Rs.init <- NDs/sum(NDs)*R0*sum(Cs)/(R0+sum(Cs))#
	Rs <- nleqslv(Rs.init,dynamic_constraints,NDs=NDs,Cs=Cs,R0=R0)#
	if(Rs[[3]]!=1){#
		print(Rs[[4]])#
	}#
	Rs <- Rs[[1]]#
	Rs/thetas-Ns#
}
init.Ns <- c(5,50,100)#
rs <- c(1,0.5,0.1)#
thetas <- c(1,1,1)#
Drs <- c(0.5,0.5,0.5)#
Gs <- c(1,1,1)#
R0 <- 200#
nstep <- 30#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)#
legend("bottomleft",paste("species",1:3),col=2:4,pch=1)
dynamic_constraints <- function(Rs,NDs,Cs,R0){#
	Rs^2 - (Cs-Rs)*(R0-sum(Rs))*NDs#
}
init.Ns <- c(5,50,100)#
rs <- c(1,0.5,0.1)#
thetas <- c(1,1,1)#
Drs <- c(0.5,0.5,0.5)#
Gs <- c(1,1,1)#
R0 <- 200#
nstep <- 30#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)#
legend("bottomleft",paste("species",1:3),col=2:4,pch=1)
init.Ns <- c(5,50,100)#
rs <- c(1,0.5,0.1)#
thetas <- c(1,1,1)#
Drs <- c(0.5,0.5,0.5)#
Gs <- c(1,2,1)#
R0 <- 200#
nstep <- 30#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
init.Ns <- c(5,50,100)#
rs <- c(1,0.5,0.1)#
thetas <- c(1,1,1)#
Drs <- c(0.5,0.5,0.5)#
Gs <- c(1,2,3)#
R0 <- 200#
nstep <- 50#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
init.Ns <- c(5,50,100)#
rs <- c(1,0.5,0.1)#
thetas <- c(1,1,1)#
Drs <- c(0.5,0.5,0.5)#
Gs <- c(10,20,30)#
R0 <- 200#
nstep <- 500#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
init.Ns <- c(5,50,100)#
rs <- c(1,0.5,0.1)#
thetas <- c(1,1,1)#
Drs <- c(0.5,0.5,0.5)#
Gs <- c(5,10,10)#
R0 <- 200#
nstep <- 500#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs=rs/10
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
Gs
rs=rs/10
rs
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs <- c(1,1,1)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs <- c(2,2,2)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs=5
Gs=c(5,5,5)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs[1]=1
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs=c(5,1,1)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs=rs*10
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs
Gs[3]=3
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
Gs
Gs[3]=10
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs=c(1,1,1)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs
Gs[3]=5
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs
Gs[2]=10
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep <- 100
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs
Gs=Gs*10
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
R0 <- 2000
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep
nstep=500
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs
rs
rs=rs*10
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
rs=rs/5
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs=rs/10
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
rs=rs*20
rs
rs=rs/4
rs
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
rs=rs*2
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs=
rs
rs=rs/10
rs=rs*5
rs
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep
nstep=1000
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
legend("bottomleft",paste("species",1:3),col=2:4,pch=1)
Gs
R0
R0=5000
rs
rs=rs*2
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep
nstep=500
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs=
Gs
Gs[1]=1
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep
rs
nstep=10
nstep=100
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs
Gs=c(1,10,50)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs
nstep=500
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
rs[1]=1
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs[1]=0.5
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs[1]=0.3
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs[1]=0.2
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep=1--
nstep=100
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
init.Ns <- c(5,50,100)#
rs <- c(1,0.5,0.1)#
thetas <- c(1,1,1)#
Drs <- c(0.5,0.5,0.5)#
Gs <- c(10,50,50)#
R0 <- 2000#
nstep <- 100#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
R0 <- 5000
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
R0 <- 10000
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs=rs/10
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep <- 500
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep <- 200
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep <- 300
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
R0
R0 <- 20000
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
R0 <- 100000
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
init.Ns <- c(5,50,100)#
rs <- c(1,0.5,0.1)#
thetas <- c(1,1,1)#
Drs <- c(0.1,0.1,0.1)#
Gs <- c(10,50,50)#
R0 <- 10000#
nstep <- 300#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs=rs/10
init.Ns <- c(5,50,100)#
rs <- c(1,0.5,0.1)#
thetas <- c(1,1,1)#
Drs <- c(0.1,0.1,0.1)#
Gs <- c(10,50,50)#
R0 <- 10000#
nstep <- 300#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs=rs/10
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep <- 500
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep <- 1000
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs
init.Ns <- c(5,50,100)#
rs <- c(1,0.5,0.1)#
thetas <- c(1,1,1)#
Drs <- c(0.1,0.1,0.1)#
Gs <- c(1,50,10)#
R0 <- 10000#
nstep <- 1000#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
rs=rs/10
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
init.Ns <- c(5,50,100)#
rs <- c(0.1,0.05,0.03)#
thetas <- c(1,1,1)#
Drs <- c(0.1,0.1,0.1)#
Gs <- c(1,50,10)#
R0 <- 10000#
nstep <- 1000#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
init.Ns <- c(5,50,100)#
rs <- c(0.1,0.05,0.03)#
thetas <- c(1,1,1)#
Drs <- c(0.1,0.1,0.1)#
Gs <- c(1,30,10)#
R0 <- 10000#
nstep <- 1000#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
init.Ns <- c(5,50,100)#
rs <- c(0.1,0.05,0.03)#
thetas <- c(1,1,1)#
Drs <- c(0.1,0.1,0.1)#
Gs <- c(1,100,10)#
R0 <- 10000#
nstep <- 1000#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Gs <- c(1,50,10)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Drs=Drs*5
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Drs=c(0,0,0)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep
nstep=5000
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Drs=Drs+0.1
Drs
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep <- 1000
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
init.Ns <- c(5,50,100)#
rs <- c(0.1,0.05,0.05)#
thetas <- c(1,1,1)#
Drs <- c(0.1,0.1,0.1)#
Gs <- c(1,50,10)#
R0 <- 10000#
nstep <- 1000#
#
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Drs=Drs*5
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
rs=rs*2
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
rs=rs*2
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs=rs/2
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
nstep
nstep=2000
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs=rs/2
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Dr=Dr/5
Drs=Drs/5
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
par(mfrow=c(2,2))
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
par(mfrow=c(2,2))
nstep=500
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Dr=Dr*5
par(mfrow=c(2,2))
nstep=1000
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Drs=Drs*3
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Drs=c(0.5,0.5,0.5)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
legend("bottomleft",paste("species",1:3),col=2:4,pch=1)
par(mfrow=c(2,2))
Drs
Drs=c(0.1,0.1,0.1)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Drs=Drs*2
Drs=c(0.3,0.3,0.3)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
Drs=c(0.5,0.5,0.5)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
plot.new()
legend("bottomleft",paste("species",1:3),col=2:4,pch=1)
Drs=Drs/5
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
multi_integrated <- function(init.Ns0,thetas,Drs,rs,Gs,R0,nstep){#
	Nseq <- matrix(nrow=nstep,ncol=length(thetas))#
	Nseq[1,] <- init.Ns0#
	clocks <- cumu_growths <- rep(0,length=length(thetas))#
	for(i in 2:nstep){#
		cumu_growths <- cumu_growths + multi_growth(Nseq[i-1,],thetas,Drs,rs,R0)#
		clocks <- clocks+1#
		for(sp in 1:length(thetas)){#
			if(clocks[sp]<Gs[sp]){#during the current generation, abundance doesn't change#
				Nseq[i,sp] <- Nseq[i-1,sp]#
			}else{#when the current generation ends, update abundance and reset clock and cumulated growth#
				Nseq[i,sp] <- Nseq[i-1,sp]+cumu_growths[sp]#
				clocks[sp] <- 0#
				cumu_growths[sp] <- 0#
			}#
		}#
	}#
	time <- 1:nstep#
	for(sp in 1:length(Drs)){#
		if(sp==1){#
			plot(Nseq[,sp]~time,col=sp+1,ylim=range(Nseq),ylab="abundance",xlab=paste("time (mean(r)=",mean(rs),")"))#
		}else{#
			points(time,Nseq[,sp],col=sp+1)#
		}#
		lines(time,Nseq[,sp],col=sp+1)#
	}#
	Nseq#
}
rs <- c(0.08,0.05,0.02)
par(mfrow=c(2,2))
rs <- c(0.08,0.05,0.02)
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
rs=rs*10
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs=rs*3/2
rs <- c(0.08,0.05,0.02)
rs=rs*3/2
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
rs=rs/3
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs
rs=rs*3
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
rs=rs*5/6
multi_integrated(init.Ns,thetas,Drs,rs,Gs,R0,nstep)
plot.new()
legend("bottomleft",paste("species",1:3),col=2:4,pch=1)
